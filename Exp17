User.java

package com.example.Exp17.model;
import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.mapping.Document;
@Document(collection = "users")
public class User {
@Id
private String id;
private String username;
private String password;
// Getters and Setters
public String getId() {
return id;
}
public void setId(String id) {
this.id = id;
}
public String getUsername() {
return username;
}
public void setUsername(String username) {
this.username = username;
}
public String getPassword() {
return password;
}
public void setPassword(String password) {
this.password = password;
}
}


UserRepository.java

package com.example.Exp17.repository;
import com.example.Exp17.model.User;
import org.springframework.data.mongodb.repository.MongoRepository;
public interface UserRepository extends MongoRepository<User, String> {
}

UserController.java

package com.example.Exp17.controller;
import com.example.Exp17.model.User;
import com.example.Exp17.repository.UserRepository;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
@RestController
@RequestMapping("/api/v1/users")
public class UserController {
private final UserRepository userRepository;
public UserController(UserRepository userRepository) {
this.userRepository = userRepository;
}
@PostMapping("/register")
public ResponseEntity<User> registerUser(@RequestBody User user) {
User savedUser = userRepository.save(user);
return ResponseEntity.ok(savedUser);
}
}


UserControllerV2.java

package com.example.Exp17.controller;
import com.example.Exp17.model.User;
import com.example.Exp17.repository.UserRepository;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
@RestController
@RequestMapping("/api/v2/users")
public class UserControllerV2 {
private final UserRepository userRepository;
public UserControllerV2(UserRepository userRepository) {

this.userRepository = userRepository;
}
@PostMapping("/register")
public ResponseEntity<User> registerUser(@RequestBody User user) {
// Save the user to the database
User savedUser = userRepository.save(user);
return ResponseEntity.ok(savedUser);
}
}

application.properties

spring.application.name=Exp17
spring.data.mongodb.host=localhost
spring.data.mongodb.port=27017
spring.data.mongodb.database=registration_db
